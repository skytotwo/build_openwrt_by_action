#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# 
# <https://github.com/skytotwo/build_openwrt_by_action>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
      
      - name: Install repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c  --no-clone-bundle
      
      - name: Merge upStearm OpenWrt
        run: |
          rm -rf friendlywrt
          mkdir friendlywrt
          cd friendlywrt
          git init
          git config user.email abc@abc.com
          git config user.name abc
          git remote add origin https://github.com/friendlyarm/friendlywrt.git
          git remote add upstream https://github.com/openwrt/openwrt.git
          git pull origin master-v18.06.1
          git pull upstream openwrt-18.06 --no-edit
      
      - name: Merge LEDE
        run: |
          cd ../ 
          git clone https://github.com/coolsnowwolf/lede
          cp -r ./lede/package/lean ./friendlywrt/package/
          
          cd friendlywrt
          
          sed -i 's/https:\/\/git.openwrt.org\/project\/luci.git;openwrt-18.06/https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default  

      - name: Update Target.mk
        run: |
          cd include 
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci/' include/target.mk    
          
      - name: Update feeds
        run: |
          cd ../
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          # 

          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 

          # 以下为定制化固件选项和说明:
          #

          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #

          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 

          # 编译x64固件:
          cat >> .config <<EOF
          # CONFIG_TARGET_x86=y
          # CONFIG_TARGET_x86_64=y
          # CONFIG_TARGET_x86_64_Generic=y
          
          CONFIG_MODULES=y
          CONFIG_HAVE_DOT_CONFIG=y
          CONFIG_TARGET_sunxi=y
          
          CONFIG_TARGET_sunxi_cortexa53=y
          CONFIG_TARGET_sunxi_cortexa53_DEVICE_sun50i-h5-nanopi-neo-plus2=y
          
          CONFIG_HAS_SUBTARGETS=y
          CONFIG_HAS_DEVICES=y
          CONFIG_TARGET_BOARD="sunxi"
          CONFIG_TARGET_SUBTARGET="cortexa53"
          CONFIG_TARGET_PROFILE="DEVICE_sun50i-h5-nanopi-neo-plus2"
          CONFIG_TARGET_ARCH_PACKAGES="aarch64_cortex-a53"
          CONFIG_DEFAULT_TARGET_OPTIMIZATION="-Os -pipe -mcpu=cortex-a53"
          CONFIG_CPU_TYPE="cortex-a53"
          CONFIG_LINUX_4_14=y
          CONFIG_DEFAULT_base-files=y
          CONFIG_DEFAULT_brcmfmac-firmware-43430-sdio=y
          CONFIG_DEFAULT_busybox=y
          CONFIG_DEFAULT_dnsmasq-full=y
          CONFIG_DEFAULT_dropbear=y
          CONFIG_DEFAULT_e2fsprogs=y
          CONFIG_DEFAULT_firewall=y
          CONFIG_DEFAULT_fstools=y
          CONFIG_DEFAULT_ip6tables=y
          CONFIG_DEFAULT_iptables=y
          CONFIG_DEFAULT_iwinfo=y
          CONFIG_DEFAULT_kmod-brcmfmac=y
          CONFIG_DEFAULT_kmod-ipt-offload=y
          CONFIG_DEFAULT_kmod-leds-gpio=y
          CONFIG_DEFAULT_kmod-ledtrig-heartbeat=y
          CONFIG_DEFAULT_kmod-rtc-sunxi=y
          CONFIG_DEFAULT_libc=y
          CONFIG_DEFAULT_libgcc=y
          CONFIG_DEFAULT_logd=y
          CONFIG_DEFAULT_mkf2fs=y
          CONFIG_DEFAULT_mtd=y
          CONFIG_DEFAULT_netifd=y
          CONFIG_DEFAULT_odhcp6c=y
          CONFIG_DEFAULT_odhcpd-ipv6only=y
          CONFIG_DEFAULT_opkg=y
          CONFIG_DEFAULT_partx-utils=y
          CONFIG_DEFAULT_ppp=y
          CONFIG_DEFAULT_ppp-mod-pppoe=y
          CONFIG_DEFAULT_uboot-envtools=y
          CONFIG_DEFAULT_uci=y
          CONFIG_DEFAULT_uclient-fetch=y
          CONFIG_DEFAULT_wpad-mini=y
          CONFIG_HAS_FPU=y
          CONFIG_AUDIO_SUPPORT=y
          CONFIG_GPIO_SUPPORT=y
          CONFIG_USB_SUPPORT=y
          CONFIG_RTC_SUPPORT=y
          CONFIG_USES_DEVICETREE=y
          CONFIG_USES_SQUASHFS=y
          CONFIG_USES_EXT4=y
          CONFIG_ARCH_64BIT=y
          CONFIG_aarch64=y
          CONFIG_arm_v7=y
          CONFIG_ARCH="aarch64"
          
          CONFIG_EXTERNAL_CPIO=""
          
          CONFIG_TARGET_ROOTFS_EXT4FS=y
          CONFIG_TARGET_EXT4_RESERVED_PCT=0
          CONFIG_TARGET_EXT4_BLOCKSIZE_4K=y
          CONFIG_TARGET_EXT4_BLOCKSIZE=4096
          CONFIG_TARGET_ROOTFS_SQUASHFS=y
          CONFIG_TARGET_SQUASHFS_BLOCK_SIZE=256
          CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP=y
          CONFIG_TARGET_UBIFS_JOURNAL_SIZE=""
          CONFIG_TARGET_IMAGES_GZIP=y
          
          EOF
          
          # cat >> .config <<EOF
          
          #
          # Image Options
          #
          CONFIG_SUNXI_SD_BOOT_PARTSIZE=20
          CONFIG_TARGET_ROOTFS_PARTSIZE=256
          
          EOF
          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF

          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF

          # IPv6支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          # CONFIG_PACKAGE_ipv6helper=y
          # EOF

          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF

          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF
          
          
          
          CONFIG_SIGNED_PACKAGES=y
          CONFIG_SIGNATURE_CHECK=y

          #
          # General build options
          #
          CONFIG_DISPLAY_SUPPORT=y
          # CONFIG_BUILD_PATENTED is not set
          # CONFIG_BUILD_NLS is not set
          CONFIG_SHADOW_PASSWORDS=y
          # CONFIG_CLEAN_IPKG is not set
          # CONFIG_INCLUDE_CONFIG is not set
          # CONFIG_COLLECT_KERNEL_DEBUG is not set

          #
          # Kernel build options
          #
          CONFIG_KERNEL_BUILD_USER=""
          CONFIG_KERNEL_BUILD_DOMAIN=""
          CONFIG_KERNEL_PRINTK=y
          CONFIG_KERNEL_CRASHLOG=y
          CONFIG_KERNEL_SWAP=y
          CONFIG_KERNEL_DEBUG_FS=y
          # CONFIG_KERNEL_ARM_PMU is not set
          # CONFIG_KERNEL_PERF_EVENTS is not set
          # CONFIG_KERNEL_PROFILING is not set
          CONFIG_KERNEL_KALLSYMS=y
          # CONFIG_KERNEL_FTRACE is not set
          CONFIG_KERNEL_DEBUG_KERNEL=y
          CONFIG_KERNEL_DEBUG_INFO=y
          # CONFIG_KERNEL_DYNAMIC_DEBUG is not set
          # CONFIG_KERNEL_KPROBES is not set
          # CONFIG_KERNEL_AIO is not set
          # CONFIG_KERNEL_FHANDLE is not set
          # CONFIG_KERNEL_FANOTIFY is not set
          # CONFIG_KERNEL_BLK_DEV_BSG is not set
          CONFIG_KERNEL_MAGIC_SYSRQ=y
          # CONFIG_KERNEL_DEBUG_PINCTRL is not set
          # CONFIG_KERNEL_DEBUG_GPIO is not set
          CONFIG_KERNEL_COREDUMP=y
          CONFIG_KERNEL_ELF_CORE=y
          # CONFIG_KERNEL_PROVE_LOCKING is not set
          CONFIG_KERNEL_PRINTK_TIME=y
          # CONFIG_KERNEL_SLABINFO is not set
          # CONFIG_KERNEL_PROC_PAGE_MONITOR is not set
          CONFIG_KERNEL_KEXEC=y

          
          # 常用LuCI插件选择:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-app-adbyby-plus=y
          # CONFIG_PACKAGE_luci-app-aria2=y
          # CONFIG_PACKAGE_luci-app-baidupcs-web=y
          # CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-app-frpc=y
          # CONFIG_PACKAGE_luci-app-hd-idle=y
          # CONFIG_PACKAGE_luci-app-kodexplorer=y
          # CONFIG_PACKAGE_luci-app-minidlna=y
          # CONFIG_PACKAGE_luci-app-openvpn=y
          # CONFIG_PACKAGE_luci-app-openvpn-server=y
          # CONFIG_PACKAGE_luci-app-qbittorrent=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          # CONFIG_PACKAGE_luci-app-ttyd=y
          # CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-verysync=y
          # CONFIG_PACKAGE_luci-app-webadmin=y
          # CONFIG_PACKAGE_luci-app-wireguard=y
          # CONFIG_PACKAGE_luci-app-wrtbwmon=y
          # EOF

          # LuCI主题:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_PACKAGE_luci-theme-netgear=y
          # EOF

          # 常用软件包:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_htop=y
          # CONFIG_PACKAGE_nano=y
          # CONFIG_PACKAGE_screen=y
          # CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          # CONFIG_PACKAGE_wget=y
          # EOF

          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF

          # 
          # ========================固件定制部分结束========================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name: Assemble artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./artifact/